{"version":3,"sources":["tokens/colors.js","components/Topbar/styles.js","redux/features/cart/cartSlice.js","components/Topbar/index.js","components/Sort/styles.js","tokens/sort.js","redux/features/sort/sortSlice.js","components/Sort/index.js","redux/features/filters/companyFilterSlice.js","components/Filter/styles.js","tokens/dimensions.js","components/Filter/index.js","components/Products/styles.js","components/ProductItem/styles.js","components/ProductItem/index.js","components/Products/index.js","containers/Market/styles.js","tokens/fonts.js","containers/Market/index.js","redux/features/filters/tagFilterSlice.js","redux/store.js","index.js"],"names":["BACKGROUND_COLORS","TEXT_COLORS","TopbarHolder","styled","div","BagHolder","cartSlice","createSlice","name","initialState","items","reducers","add","state","action","console","log","payload","push","remove","splice","findIndex","i","actions","selectCart","cart","Topbar","shoppingList","useState","balance","setBalance","useSelector","useEffect","result","map","price","Math","ceil","className","SortWrapper","SortList","form","SortValue","SORT_MODES","value","sortSlice","edit","selectSort","sort","Sort","dispatch","useDispatch","changeSort","sortVal","onClick","companyFilterSlice","selectCompanyFilter","companyFilters","FilterWrapper","FilterBox","CompanyList","Company","selected","Filter","filterName","searchValue","setSearchValue","companies","setCompanies","companyFilter","axios","get","then","res","data","placeholder","onChange","e","target","company","key","slug","indexOf","changeFilterStatus","ProductsWrapper","ItemTypeFilter","ItemTypeFilterButton","button","ProductGrid","ProductItemWrapper","ProductImageWrapper","ProductImage","ProductName","p","ProductItem","item","Products","selectedType","setSelectedType","page","setPage","setTotalPage","setItems","dbLink","setDbLink","link","headers","length","added","prev","Wrapper","MarketWrapper","SidePanel","Market","setSortVal","info","tagFilterSlice","store","configureStore","reducer","cartReducer","companyFilterReducer","tagFilters","tagFilterReducer","sortReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb9afcd4.chunk.js","sourcesContent":["const PRIMARY_COLOR = '#1EA4CE';\nconst SECONDARY_COLOR = '#147594';\nconst BACKGROUND_COLOR = '#E5E5E5';\nconst FLU_BUTTON = '#F2F0FD';\nconst WHITE = '#fff';\nconst COMPONENT = '#6f6f6f';\nconst FILTER = '#E0E0E0';\n\nconst TEXT = '#525252';\n\nexport const BACKGROUND_COLORS = {\n  DEFAULT: BACKGROUND_COLOR,\n  COMPONENT: WHITE,\n  LIGHT: PRIMARY_COLOR,\n  DARK: SECONDARY_COLOR,\n  UNSELECTED: FLU_BUTTON,\n  FILTER: FILTER,\n};\n\nexport const TEXT_COLORS = {\n  DEFAULT: TEXT,\n  TOPBAR: WHITE,\n  COMPONENT: COMPONENT,\n  NOT_SELECTED: PRIMARY_COLOR,\n  SELECTED: FLU_BUTTON,\n};\n","import styled from 'styled-components/macro';\n\nimport { BACKGROUND_COLORS, TEXT_COLORS } from 'tokens/colors';\n\nexport const TopbarHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100vw;\n  height: 76.64px;\n  background: ${BACKGROUND_COLORS.LIGHT};\n  align-items: center;\n  justify-content: center;\n  color: ${TEXT_COLORS.TOPBAR};\n  position: relative;\n`;\n\nexport const BagHolder = styled.div`\n  position: absolute;\n  background: ${BACKGROUND_COLORS.DARK};\n  left: 84%;\n  width: 130px;\n  height: 76.64px;\n  align-items: center;\n  display: flex;\n  justify-content: space-evenly;\n`;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  items: [],\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    //add\n    add(state, action) {\n      console.log(`adding ${action.payload['name']}`);\n      state.items.push(action.payload);\n    },\n    //remove\n    remove(state, action) {\n      state.items.splice(state.items.findIndex(i => i === action.payload));\n    },\n  },\n});\n\nexport const { add, remove } = cartSlice.actions;\n\nexport const selectCart = state => state.cart.items;\n\nexport default cartSlice.reducer;\n","import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { TopbarHolder, BagHolder } from './styles';\n\nimport { selectCart } from 'redux/features/cart/cartSlice';\n\nexport const Topbar = ({ shoppingList }) => {\n  const [balance, setBalance] = useState(0);\n  const cart = useSelector(selectCart);\n  useEffect(() => {\n    let result = 0;\n    cart.map(i => {\n      return (result += i.price);\n    });\n    result = Math.ceil(result * 100) / 100;\n    setBalance(result);\n  }, [cart]);\n  return (\n    <TopbarHolder>\n      <h1>market</h1>\n      <BagHolder>\n        <i className=\"ri-shopping-bag-line\" />\n        <p>₺{balance}</p>\n      </BagHolder>\n    </TopbarHolder>\n  );\n};\n","import styled from 'styled-components/macro';\nimport { BACKGROUND_COLORS, TEXT_COLORS } from 'tokens/colors';\n\nexport const SortWrapper = styled.div`\n  height: 214px;\n  width: inherit;\n  p {\n    margin-bottom: 12px;\n    color: ${TEXT_COLORS.COMPONENT};\n    font-size: 13px;\n  }\n`;\n\nexport const SortList = styled.form`\n  display: flex;\n  flex-direction: column;\n  background: ${BACKGROUND_COLORS.COMPONENT};\n  justify-content: center;\n  height: 184px;\n  box-shadow: 0px 6px 24px rgba(93, 62, 188, 0.04);\n  border-radius: 2px;\n`;\n\nexport const SortValue = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin-top: 24px;\n  margin-left: 24px;\n  :last-child {\n    margin-bottom: 26px;\n  }\n  label {\n    color: ${TEXT_COLORS.DEFAULT};\n    margin-left: 12px;\n  }\n  i {\n    color: ${BACKGROUND_COLORS.LIGHT};\n    font-size: 20px;\n    cursor: pointer;\n  }\n`;\n","export const SORT_MODES = {\n  NEW_TO_OLD: 'New to old',\n  OLD_TO_NEW: 'Old to new',\n  LOW_TO_HIGH: 'Price low to high',\n  HIGH_TO_LOW: 'Price high to low',\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { SORT_MODES } from 'tokens/sort';\n\nconst initialState = {\n  value: SORT_MODES.LOW_TO_HIGH,\n};\n\nexport const sortSlice = createSlice({\n  name: 'sort',\n  initialState,\n  reducers: {\n    //edit\n    edit(state, action) {\n      console.log(`Changing sort to ${action.payload}`);\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { edit } = sortSlice.actions;\n\nexport const selectSort = state => state.sort.value;\n\nexport default sortSlice.reducer;\n","import React, { useState, useEffect } from 'react';\n\nimport { SortWrapper, SortList, SortValue } from './styles';\n\nimport { edit, selectSort } from 'redux/features/sort/sortSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { SORT_MODES } from 'tokens/sort';\n\nexport const Sort = () => {\n  const dispatch = useDispatch();\n  const sort = useSelector(selectSort);\n\n  const changeSort = sortVal => {\n    dispatch(edit(sortVal));\n  };\n\n  return (\n    <SortWrapper>\n      <p>Sorting</p>\n      <SortList>\n        <SortValue>\n          <i\n            className={\n              sort === SORT_MODES.LOW_TO_HIGH\n                ? 'ri-checkbox-circle-line'\n                : 'ri-checkbox-blank-circle-line'\n            }\n            onClick={() => changeSort(SORT_MODES.LOW_TO_HIGH)}\n          />\n          <label>{SORT_MODES.LOW_TO_HIGH}</label>\n        </SortValue>\n        <SortValue>\n          <i\n            className={\n              sort === SORT_MODES.HIGH_TO_LOW\n                ? 'ri-checkbox-circle-line'\n                : 'ri-checkbox-blank-circle-line'\n            }\n            onClick={() => changeSort(SORT_MODES.HIGH_TO_LOW)}\n          />\n          <label>{SORT_MODES.HIGH_TO_LOW}</label>\n        </SortValue>\n        <SortValue>\n          <i\n            className={\n              sort === SORT_MODES.NEW_TO_OLD\n                ? 'ri-checkbox-circle-line'\n                : 'ri-checkbox-blank-circle-line'\n            }\n            onClick={() => changeSort(SORT_MODES.NEW_TO_OLD)}\n          />\n          <label>{SORT_MODES.NEW_TO_OLD}</label>\n        </SortValue>\n        <SortValue>\n          <i\n            className={\n              sort === SORT_MODES.OLD_TO_NEW\n                ? 'ri-checkbox-circle-line'\n                : 'ri-checkbox-blank-circle-line'\n            }\n            onClick={() => changeSort(SORT_MODES.OLD_TO_NEW)}\n          />\n          <label>{SORT_MODES.OLD_TO_NEW}</label>\n        </SortValue>\n      </SortList>\n    </SortWrapper>\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  items: [],\n};\n\nexport const companyFilterSlice = createSlice({\n  name: 'companyFilter',\n  initialState,\n  reducers: {\n    //add\n    add(state, action) {\n      state.items.push(action.payload);\n    },\n    //remove\n    remove(state, action) {\n      state.items.splice(state.items.findIndex(i => i === action.payload));\n    },\n  },\n});\n\nexport const { add, remove } = companyFilterSlice.actions;\n\nexport const selectCompanyFilter = state => state.companyFilters.items;\n\nexport default companyFilterSlice.reducer;\n","import styled from 'styled-components/macro';\nimport { BACKGROUND_COLORS, TEXT_COLORS } from 'tokens/colors';\n\nimport { SIDEPANEL_WIDTH } from 'tokens/dimensions';\n\nexport const FilterWrapper = styled.div`\n  height: 274px;\n  width: ${SIDEPANEL_WIDTH}px;\n  p {\n    margin-bottom: 12px;\n    color: ${TEXT_COLORS.COMPONENT};\n    font-size: 13px;\n  }\n  margin-top: 24px;\n`;\n\nexport const FilterBox = styled.div`\n  height: 200px;\n  overflow-x: hidden;\n  background: ${BACKGROUND_COLORS.COMPONENT};\n  box-shadow: 0px 6px 24px rgba(93, 62, 188, 0.04);\n  border-radius: 2px;\n  display: flex;\n  /* justify-content: center; */\n  flex-direction: column;\n  input {\n    width: 248px;\n    height: 48px !important;\n    margin: 24px;\n    border: 2px solid #e0e0e0;\n    box-sizing: border-box;\n    border-radius: 2px;\n    padding-left: 16px;\n    font-family: 'inter';\n  }\n  padding-bottom: 24px;\n`;\n\nexport const CompanyList = styled.div`\n  height: 142px;\n  overflow-y: scroll;\n`;\n\nexport const Company = styled.div`\n  display: flex;\n  margin-bottom: 18px;\n  margin-left: 24px;\n  margin-top: 1px;\n  i {\n    color: ${BACKGROUND_COLORS.COMPONENT};\n    font-size: 22px;\n    height: 22px;\n    margin-right: 8px;\n    box-shadow: 0px 1px 7px rgba(93, 56, 192, 0.4);\n    border-radius: 2px;\n    ${({ selected }) =>\n      selected &&\n      `\n    color: ${BACKGROUND_COLORS.LIGHT};\n    box-shadow: 0px 0px 0px;\n    `}\n  }\n`;\n","export const SIDEPANEL_WIDTH = 296;\n","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  add,\n  remove,\n  selectCompanyFilter,\n} from 'redux/features/filters/companyFilterSlice';\n\nimport { FilterWrapper, FilterBox, CompanyList, Company } from './styles';\n\nexport const Filter = ({ filterName }) => {\n  const [searchValue, setSearchValue] = useState('');\n  const [companies, setCompanies] = useState([]);\n\n  const dispatch = useDispatch();\n  const companyFilter = useSelector(selectCompanyFilter);\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/companies').then(res => {\n      setCompanies(res.data);\n    });\n  }, []);\n\n  const changeFilterStatus = company => {\n    if (companyFilter.indexOf(company) !== -1) {\n      dispatch(remove(company));\n    } else {\n      dispatch(add(company));\n    }\n  };\n\n  return (\n    <FilterWrapper>\n      <p>{filterName}</p>\n      <FilterBox>\n        <input\n          value={searchValue}\n          placeholder={`Search ${filterName}`}\n          onChange={e => setSearchValue(e.target.value)}\n        />\n        <CompanyList>\n          {filterName === 'Brands' &&\n            companies.map(company => {\n              return (\n                <Company\n                  key={company.slug}\n                  selected={companyFilter.indexOf(company.slug) !== -1}\n                >\n                  <i\n                    className={\n                      companyFilter.indexOf(company.slug) !== -1\n                        ? 'ri-checkbox-fill'\n                        : 'ri-checkbox-blank-fill'\n                    }\n                    onClick={() => {\n                      changeFilterStatus(company.slug);\n                    }}\n                  />\n                  <label>{company.name}</label>\n                  <br />\n                </Company>\n              );\n            })}\n        </CompanyList>\n      </FilterBox>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components/macro';\n\nimport { BACKGROUND_COLORS, TEXT_COLORS } from 'tokens/colors';\n\nexport const ProductsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  h2 {\n    color: ${TEXT_COLORS.COMPONENT};\n    font-size: 20px;\n  }\n  border-radius: 2px;\n  margin-left: 16px;\n`;\n\nexport const ItemTypeFilter = styled.div`\n  margin-top: 16px;\n  width: 129px;\n  height: 30px;\n`;\n\nexport const ItemTypeFilterButton = styled.button`\n  background: ${BACKGROUND_COLORS.UNSELECTED};\n  padding: 6px 16px;\n  width: 60px;\n  height: 30px;\n  color: ${TEXT_COLORS.NOT_SELECTED};\n  :first-child {\n    margin-right: 8px;\n  }\n  border: 0;\n  ${({ selected }) =>\n    selected &&\n    `background: ${BACKGROUND_COLORS.LIGHT};\n  \n  color: ${TEXT_COLORS.SELECTED};`}\n`;\n\nexport const ProductGrid = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-wrap: wrap;\n  background: ${BACKGROUND_COLORS.COMPONENT};\n  width: 588px;\n  height: 1008px;\n  gap: 22px 24px;\n  padding-left: 20px;\n  padding-top: 20px;\n`;\n","import styled from 'styled-components/macro';\n\nimport { BACKGROUND_COLORS, TEXT_COLORS } from 'tokens/colors';\n\nexport const ProductItemWrapper = styled.div`\n  button {\n    background: ${BACKGROUND_COLORS.LIGHT};\n    border-radius: 2px;\n    font-size: 12px;\n  }\n  width: 124px;\n  height: 225px;\n  display: flex;\n  flex-direction: column;\n  /* margin: 20px 24px; */\n  p {\n    color: ${TEXT_COLORS.NOT_SELECTED};\n  }\n  justify-content: space-between;\n`;\n\nexport const ProductImageWrapper = styled.div`\n  height: 124px;\n  top: 223px;\n  width: 124px;\n  border: 1.17666px solid #f3f0fe;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n`;\n\nexport const ProductImage = styled.div`\n  width: 92px;\n  height: 92px;\n  background: #c4c4c4;\n`;\n\nexport const ProductName = styled.p`\n  font-size: 14px;\n  color: black !important;\n`;\n","import React from 'react';\n\n//Redux\nimport { useDispatch } from 'react-redux';\nimport { add } from 'redux/features/cart/cartSlice';\n\nimport {\n  ProductItemWrapper,\n  ProductImageWrapper,\n  ProductName,\n  ProductImage,\n} from './styles';\n\nexport const ProductItem = ({ item }) => {\n  const dispatch = useDispatch();\n  return (\n    <ProductItemWrapper>\n      <ProductImageWrapper>\n        <ProductImage />\n      </ProductImageWrapper>\n      <p>₺{item.price}</p>\n      <ProductName>{item.name}</ProductName>\n      <button\n        onClick={() => {\n          dispatch(add(item));\n        }}\n      >\n        Add\n      </button>\n    </ProductItemWrapper>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  ProductsWrapper,\n  ItemTypeFilter,\n  ItemTypeFilterButton,\n  ProductGrid,\n} from './styles';\n\nimport { SORT_MODES } from 'tokens/sort';\n\n//Suanlik datayi burda cekiyorum ama belki baska bir yere koymak daha mantiklidir?\nimport { selectCompanyFilter } from 'redux/features/filters/companyFilterSlice';\nimport { selectSort } from 'redux/features/sort/sortSlice';\n\nimport { useSelector } from 'react-redux';\n\n//Items'dan kucuk bir parca alarak test yapildi, calistiktan sonra stylinge gecildi.\n//Dosyalarin cekilmesi icin axios\nimport axios from 'axios';\n\nimport { ProductItem } from 'components/ProductItem';\n\nexport const Products = () => {\n  const [selectedType, setSelectedType] = useState('mug');\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  const [items, setItems] = useState([]);\n  const companyFilter = useSelector(selectCompanyFilter);\n  const [dbLink, setDbLink] = useState(\n    `http://localhost:3000/items?_sort=price&_order=desc&_page=${page}&_limit=16`\n  );\n  const sort = useSelector(selectSort);\n\n  useEffect(() => {\n    let link = ``;\n    switch (sort) {\n      case SORT_MODES.LOW_TO_HIGH:\n        link = `http://localhost:3000/items?_sort=price&_order=asc&_page=${page}&_limit=16`;\n        break;\n      case SORT_MODES.HIGH_TO_LOW:\n        link = `http://localhost:3000/items?_sort=price&_order=desc&_page=${page}&_limit=16`;\n        break;\n      case SORT_MODES.NEW_TO_OLD:\n        link = `http://localhost:3000/items?_sort=added&_order=desc&_page=${page}&_limit=16`;\n        break;\n      case SORT_MODES.OLD_TO_NEW:\n        link = `http://localhost:3000/items?_sort=added&_order=asc&_page=${page}&_limit=16`;\n        break;\n      default:\n        console.log(`Not supposed to come here, sort: ${sort}`);\n    }\n    selectedType === 'mug'\n      ? (link += `&itemType=mug`)\n      : (link += `&itemType=shirt`);\n    companyFilter.map(company => {\n      return (link += `&manufacturer=${company}`);\n    });\n    console.log(link);\n    setDbLink(link);\n  }, [sort, page, selectedType, companyFilter]);\n\n  useEffect(() => {\n    axios.get(dbLink).then(res => {\n      setTotalPage(Math.ceil(res.headers['x-total-count'] / 16));\n      if (res.data.length > 0) setItems(res.data);\n    });\n  }, [dbLink, page, companyFilter]);\n\n  return (\n    <ProductsWrapper>\n      <h2>Products</h2>\n      <ItemTypeFilter>\n        <ItemTypeFilterButton\n          selected={selectedType === 'mug'}\n          onClick={() => setSelectedType('mug')}\n        >\n          mug\n        </ItemTypeFilterButton>\n        <ItemTypeFilterButton\n          selected={selectedType === 'shirt'}\n          onClick={() => setSelectedType('shirt')}\n        >\n          shirt\n        </ItemTypeFilterButton>\n      </ItemTypeFilter>\n      <ProductGrid>\n        {items.map(item => {\n          return <ProductItem item={item} key={item.name + item.added} />;\n        })}\n      </ProductGrid>\n      <button\n        onClick={() => {\n          setPage(prev => prev + 1);\n        }}\n      >\n        +\n      </button>\n    </ProductsWrapper>\n  );\n};\n","import styled from 'styled-components/macro';\nimport { BACKGROUND_COLORS } from 'tokens/colors';\nimport { FONTS } from 'tokens/fonts';\nimport { SIDEPANEL_WIDTH } from 'tokens/dimensions';\n\nexport const Wrapper = styled.div`\n  background-color: ${BACKGROUND_COLORS.DEFAULT};\n  height: fit-content;\n  width: 100vw;\n  font-family: ${FONTS.PRIMARY};\n`;\n\nexport const MarketWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 38.36px;\n  height: fit-content;\n  width: fit-content;\n`;\n\nexport const SidePanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 104px;\n  margin-right: 8px;\n  width: ${SIDEPANEL_WIDTH}px;\n`;\n","export const FONTS = {\n  PRIMARY: 'Open Sans',\n};\n","import React, { useState } from 'react';\nimport 'App.css';\nimport 'remixicon/fonts/remixicon.css';\n\nimport { Topbar } from 'components/Topbar';\nimport { Sort } from 'components/Sort';\nimport { Filter } from 'components/Filter';\nimport { Products } from 'components/Products';\n\nimport { Wrapper, SidePanel, MarketWrapper } from './styles';\n\nconst Market = () => {\n  const [sortVal, setSortVal] = useState(0);\n  return (\n    <Wrapper>\n      <Topbar />\n      <MarketWrapper>\n        <SidePanel>\n          <Sort setSortVal={setSortVal} />\n          <Filter info={[]} filterName={'Brands'} />\n          <Filter info={[]} filterName={'Tags'} />\n        </SidePanel>\n        <Products sortVal={sortVal} />\n      </MarketWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Market;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  items: [],\n};\n\nexport const tagFilterSlice = createSlice({\n  name: 'tagFilter',\n  initialState,\n  reducers: {\n    //add\n    add(state, action) {\n      state.items.push(action.payload);\n    },\n    //remove\n    remove(state, action) {\n      state.items.splice(state.items.findIndex(i => i === action.payload));\n    },\n  },\n});\n\nexport const { add, remove } = tagFilterSlice.actions;\n\nexport const selectTagFilter = state => state.tagFilters.items;\n\nexport default tagFilterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport cartReducer from 'redux/features/cart/cartSlice';\nimport companyFilterReducer from 'redux/features/filters/companyFilterSlice';\nimport tagFilterReducer from 'redux/features/filters/tagFilterSlice';\nimport sortReducer from 'redux/features/sort/sortSlice';\n\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer,\n    companyFilters: companyFilterReducer,\n    tagFilters: tagFilterReducer,\n    sort: sortReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport Market from './containers/Market';\n\n//Store\nimport { store } from 'redux/store';\n\n//!!! https://github.com/typicode/json-server/issues/813\n\nReactDOM.render(\n  <Provider store={store}>\n    <Market />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}