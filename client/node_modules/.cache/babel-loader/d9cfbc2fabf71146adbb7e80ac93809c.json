{"ast":null,"code":"import _slicedToArray from \"/Users/harunkaneti/Documents/GitHub/getir-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/harunkaneti/Documents/GitHub/getir-challenge/src/components/Filter/index.js\";\n\nimport React, { useState } from 'react';\nimport { FilterWrapper, FilterBox } from './styles';\nexport var Filter = function Filter(_ref) {\n  var filterName = _ref.filterName,\n      info = _ref.info;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchValue = _useState2[0],\n      setSearchValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedFilters = _useState4[0],\n      setSelectedFilters = _useState4[1];\n\n  return /*#__PURE__*/React.createElement(FilterWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, filterName), /*#__PURE__*/React.createElement(FilterBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: searchValue,\n    placeholder: \"Search \".concat(filterName),\n    onChange: function onChange(e) {\n      return setSearchValue(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), info.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"vehicle1\",\n      name: \"vehicle1\",\n      value: \"Bike\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, i));\n  })));\n};","map":{"version":3,"sources":["/Users/harunkaneti/Documents/GitHub/getir-challenge/src/components/Filter/index.js"],"names":["React","useState","FilterWrapper","FilterBox","Filter","filterName","info","searchValue","setSearchValue","selectedFilters","setSelectedFilters","e","target","value","map","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,UAAzC;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA0B;AAAA,MAAvBC,UAAuB,QAAvBA,UAAuB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC9C,kBAAsCL,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA8CP,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAOQ,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,UAAJ,CADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEE,WADT;AAEE,IAAA,WAAW,mBAAYF,UAAZ,CAFb;AAGE,IAAA,QAAQ,EAAE,kBAAAM,CAAC;AAAA,aAAIH,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGP,IAAI,CAACQ,GAAL,CAAS,UAAAC,CAAC,EAAI;AACb,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,CAAR,CAPF,CADF;AAWD,GAZA,CANH,CAFF,CADF;AAyBD,CA5BM","sourcesContent":["import React, { useState } from 'react';\n\nimport { FilterWrapper, FilterBox } from './styles';\n\nexport const Filter = ({ filterName, info }) => {\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  return (\n    <FilterWrapper>\n      <p>{filterName}</p>\n      <FilterBox>\n        <input\n          value={searchValue}\n          placeholder={`Search ${filterName}`}\n          onChange={e => setSearchValue(e.target.value)}\n        />\n        {info.map(i => {\n          return (\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"vehicle1\"\n                name=\"vehicle1\"\n                value=\"Bike\"\n              />\n              <label>{i}</label>\n            </div>\n          );\n        })}\n      </FilterBox>\n    </FilterWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}